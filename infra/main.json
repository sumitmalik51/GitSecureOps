{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "14134259963763439782"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "metadata": {
        "description": "The environment name"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "The Azure region where resources will be deployed"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group name"
      }
    },
    "githubClientId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "GitHub Client ID for OAuth"
      }
    },
    "githubRedirectUri": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "GitHub Redirect URI for OAuth"
      }
    },
    "githubClientSecret": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "GitHub Client Secret for OAuth"
      }
    }
  },
  "variables": {
    "resourceToken": "[uniqueString(subscription().id, parameters('location'), parameters('environmentName'))]",
    "resourcePrefix": "gh"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('resourceGroupName')]",
      "location": "[parameters('location')]",
      "tags": {
        "azd-env-name": "[parameters('environmentName')]"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "main-resources",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "environmentName": {
            "value": "[parameters('environmentName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceToken": {
            "value": "[variables('resourceToken')]"
          },
          "resourcePrefix": {
            "value": "[variables('resourcePrefix')]"
          },
          "githubClientId": {
            "value": "[parameters('githubClientId')]"
          },
          "githubRedirectUri": {
            "value": "[parameters('githubRedirectUri')]"
          },
          "githubClientSecret": {
            "value": "[parameters('githubClientSecret')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "6604393721826767841"
            }
          },
          "parameters": {
            "environmentName": {
              "type": "string",
              "metadata": {
                "description": "The environment name"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The Azure region where resources will be deployed"
              }
            },
            "resourceToken": {
              "type": "string",
              "metadata": {
                "description": "The resource token for unique naming"
              }
            },
            "resourcePrefix": {
              "type": "string",
              "metadata": {
                "description": "The resource prefix"
              }
            },
            "githubClientId": {
              "type": "string",
              "metadata": {
                "description": "GitHub Client ID for OAuth"
              }
            },
            "githubClientSecret": {
              "type": "securestring",
              "defaultValue": "",
              "metadata": {
                "description": "GitHub Client Secret for OAuth (secure)"
              }
            },
            "githubRedirectUri": {
              "type": "string",
              "metadata": {
                "description": "GitHub Redirect URI for OAuth"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[format('log-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken'))]",
              "location": "[parameters('location')]",
              "tags": {
                "azd-env-name": "[parameters('environmentName')]"
              },
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": 30
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-07-01",
              "name": "[format('kv-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken'))]",
              "location": "[parameters('location')]",
              "tags": {
                "azd-env-name": "[parameters('environmentName')]"
              },
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": false,
                "enabledForDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 7,
                "enablePurgeProtection": false,
                "networkAcls": {
                  "defaultAction": "Allow",
                  "bypass": "AzureServices"
                },
                "accessPolicies": []
              }
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[format('id-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken'))]",
              "location": "[parameters('location')]",
              "tags": {
                "azd-env-name": "[parameters('environmentName')]"
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[format('ai-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken'))]",
              "location": "[parameters('location')]",
              "kind": "web",
              "tags": {
                "azd-env-name": "[parameters('environmentName')]"
              },
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[format('st{0}func{1}', parameters('resourcePrefix'), parameters('resourceToken'))]",
              "location": "[parameters('location')]",
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_LRS"
              },
              "tags": {
                "azd-env-name": "[parameters('environmentName')]"
              },
              "properties": {
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "networkAcls": {
                  "defaultAction": "Allow"
                }
              }
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-09-01",
              "name": "[format('plan-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken'))]",
              "location": "[parameters('location')]",
              "tags": {
                "azd-env-name": "[parameters('environmentName')]"
              },
              "sku": {
                "name": "Y1",
                "tier": "Dynamic"
              },
              "properties": {
                "reserved": false
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-09-01",
              "name": "[format('func-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken'))]",
              "location": "[parameters('location')]",
              "kind": "functionapp",
              "tags": {
                "azd-env-name": "[parameters('environmentName')]",
                "azd-service-name": "gitsecureops-api"
              },
              "identity": {
                "type": "SystemAssigned, UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken'))))]": {}
                }
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('plan-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')))]",
                "httpsOnly": true,
                "siteConfig": {
                  "cors": {
                    "allowedOrigins": [
                      "[format('https://{0}', reference(resourceId('Microsoft.Web/staticSites', format('swa-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken'))), '2022-09-01').defaultHostname)]",
                      "http://localhost:4280"
                    ],
                    "supportCredentials": true
                  },
                  "ftpsState": "Disabled",
                  "minTlsVersion": "1.2",
                  "nodeVersion": "~20",
                  "appSettings": [
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', format('st{0}func{1}', parameters('resourcePrefix'), parameters('resourceToken')), listKeys(resourceId('Microsoft.Storage/storageAccounts', format('st{0}func{1}', parameters('resourcePrefix'), parameters('resourceToken'))), '2023-01-01').keys[0].value)]"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "node"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~4"
                    },
                    {
                      "name": "WEBSITE_NODE_DEFAULT_VERSION",
                      "value": "~20"
                    },
                    {
                      "name": "GH_WEB_APP",
                      "value": "[parameters('githubClientId')]"
                    },
                    {
                      "name": "GH_WEB_APP_SECRET",
                      "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', format('kv-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')), 'github-client-secret')]"
                    },
                    {
                      "name": "FRONTEND_URL",
                      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/staticSites', format('swa-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken'))), '2022-09-01').defaultHostname)]"
                    },
                    {
                      "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                      "value": "[reference(resourceId('Microsoft.Insights/components', format('ai-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken'))), '2020-02-02').ConnectionString]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', format('ai-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')))]",
                "[resourceId('Microsoft.Web/serverfarms', format('plan-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')))]",
                "[resourceId('Microsoft.KeyVault/vaults/secrets', format('kv-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')), 'github-client-secret')]",
                "[resourceId('Microsoft.KeyVault/vaults', format('kv-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')))]",
                "[resourceId('Microsoft.Web/staticSites', format('swa-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')))]",
                "[resourceId('Microsoft.Storage/storageAccounts', format('st{0}func{1}', parameters('resourcePrefix'), parameters('resourceToken')))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', format('kv-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')), 'github-client-secret')]",
              "properties": {
                "value": "[parameters('githubClientSecret')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', format('kv-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/accessPolicies",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', format('kv-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')), 'add')]",
              "properties": {
                "accessPolicies": [
                  {
                    "tenantId": "[subscription().tenantId]",
                    "objectId": "[reference(resourceId('Microsoft.Web/sites', format('func-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken'))), '2022-09-01', 'full').identity.principalId]",
                    "permissions": {
                      "secrets": [
                        "get"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('func-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')))]",
                "[resourceId('Microsoft.KeyVault/vaults', format('kv-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Web/sites/{0}', format('func-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')))]",
              "name": "functionapp-diagnostics",
              "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')))]",
                "logs": [
                  {
                    "category": "FunctionAppLogs",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": true,
                      "days": 30
                    }
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": true,
                      "days": 30
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('func-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.Web/staticSites",
              "apiVersion": "2022-09-01",
              "name": "[format('swa-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken'))]",
              "location": "[parameters('location')]",
              "tags": {
                "azd-env-name": "[parameters('environmentName')]",
                "azd-service-name": "gitsecureops-web"
              },
              "sku": {
                "name": "Free",
                "tier": "Free"
              },
              "properties": {
                "buildProperties": {
                  "skipGithubActionWorkflowGeneration": false,
                  "appBuildCommand": "npm run build",
                  "outputLocation": "dist",
                  "appLocation": "/"
                },
                "stagingEnvironmentPolicy": "Enabled",
                "allowConfigFileUpdates": true,
                "provider": "GitHub",
                "enterpriseGradeCdnStatus": "Disabled"
              }
            },
            {
              "type": "Microsoft.Web/staticSites/config",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', format('swa-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')), 'appsettings')]",
              "properties": {
                "REACT_APP_GITHUB_CLIENT_ID": "[parameters('githubClientId')]",
                "REACT_APP_GITHUB_REDIRECT_URI": "[parameters('githubRedirectUri')]",
                "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('Microsoft.Insights/components', format('ai-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken'))), '2020-02-02').ConnectionString]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', format('ai-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')))]",
                "[resourceId('Microsoft.Web/staticSites', format('swa-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken')))]"
              ]
            }
          ],
          "outputs": {
            "STATICWEBAPP_URL": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/staticSites', format('swa-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken'))), '2022-09-01').defaultHostname]"
            },
            "STATICWEBAPP_NAME": {
              "type": "string",
              "value": "[format('swa-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken'))]"
            },
            "FUNCTIONAPP_NAME": {
              "type": "string",
              "value": "[format('func-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken'))]"
            },
            "APPLICATION_INSIGHTS_CONNECTION_STRING": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', format('ai-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken'))), '2020-02-02').ConnectionString]"
            },
            "APPLICATION_INSIGHTS_INSTRUMENTATION_KEY": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', format('ai-{0}-{1}', parameters('resourcePrefix'), parameters('resourceToken'))), '2020-02-02').InstrumentationKey]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    }
  ],
  "outputs": {
    "RESOURCE_GROUP_ID": {
      "type": "string",
      "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
    },
    "AZURE_LOCATION": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "AZURE_TENANT_ID": {
      "type": "string",
      "value": "[tenant().tenantId]"
    },
    "STATICWEBAPP_URL": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'main-resources'), '2022-09-01').outputs.STATICWEBAPP_URL.value]"
    },
    "STATICWEBAPP_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'main-resources'), '2022-09-01').outputs.STATICWEBAPP_NAME.value]"
    },
    "FUNCTIONAPP_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'main-resources'), '2022-09-01').outputs.FUNCTIONAPP_NAME.value]"
    }
  }
}