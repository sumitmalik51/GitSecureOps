name: Deploy Infrastructure to Azure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging
        - prod
      region:
        description: 'Azure region'
        required: true
        default: 'eastus'
        type: string

env:
  NODE_VERSION: '20.x'

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Upgrade Azure CLI and Bicep
      run: |
        echo "Upgrading Azure CLI and Bicep..."
        az --version
        az bicep upgrade
        az bicep version
        echo "Upgrade completed!"

    - name: Create Resource Group
      run: |
        RESOURCE_GROUP="rg-gitsecureops-${{ inputs.environment }}"
        echo "Creating resource group: $RESOURCE_GROUP"
        az group create \
          --name "$RESOURCE_GROUP" \
          --location ${{ inputs.region }} \
          --tags azd-env-name=${{ inputs.environment }}

    - name: Deploy Infrastructure
      run: |
        RESOURCE_GROUP="rg-gitsecureops-${{ inputs.environment }}"
        RESOURCE_TOKEN=$(openssl rand -hex 6)
        
        echo "Deploying infrastructure to ${{ inputs.environment }} environment..."
        echo "Using resource token: $RESOURCE_TOKEN"
        
        # Deploy using resource group scope - much more stable
        az deployment group create \
          --resource-group "$RESOURCE_GROUP" \
          --template-file infra/main-resources.bicep \
          --parameters \
            environmentName=${{ inputs.environment }} \
            location=${{ inputs.region }} \
            resourceToken="$RESOURCE_TOKEN" \
            resourcePrefix="gh" \
            githubClientId='${{ secrets.GH_WEB_APP }}' \
            githubRedirectUri='https://placeholder.azurestaticapps.net/oauth-callback' \
            githubClientSecret='${{ secrets.GH_WEB_APP_SECRET }}'
        
        echo "Deployment completed. Getting Static Web App URL..."
        
        # Get the SWA URL from the resource group
        SWA_URL=$(az staticwebapp list --resource-group "$RESOURCE_GROUP" --query "[0].defaultHostname" -o tsv)
        
        if [ -n "$SWA_URL" ]; then
          echo "‚úÖ App deployed: https://$SWA_URL"
          echo "üìã OAuth Redirect URI: https://$SWA_URL/oauth-callback"
        else
          echo "‚ùå Could not retrieve Static Web App URL"
          echo "Checking deployed resources..."
          az resource list --resource-group "$RESOURCE_GROUP" --query "[].{Name:name, Type:type}" -o table
          exit 1
        fi

    - name: Azure logout
      run: az logout
      if: always()