name: Deploy Application to Azure Static Web Apps

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging
        - prod

env:
  NODE_VERSION: '20.x'

jobs:
  deploy-application:
    runs-on: ubuntu-latest
    
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Frontend to Static Web Apps
      run: |
        RESOURCE_GROUP="rg-gitsecureops-${{ inputs.environment }}"
        SWA_NAME=$(az staticwebapp list --resource-group $RESOURCE_GROUP --query "[0].name" -o tsv)
        SWA_URL=$(az staticwebapp list --resource-group $RESOURCE_GROUP --query "[0].defaultHostname" -o tsv)
        
        # Install frontend dependencies and build
        npm ci
        VITE_GITHUB_CLIENT_ID=${{ secrets.GH_WEB_APP }} VITE_GITHUB_REDIRECT_URI=https://$SWA_URL/api/github-callback npm run build
        
        # Install SWA CLI
        npm install -g @azure/static-web-apps-cli
        
        # Deploy frontend only to Static Web Apps
        SWA_TOKEN=$(az staticwebapp secrets list --resource-group $RESOURCE_GROUP --name $SWA_NAME --query "properties.apiKey" -o tsv)
        echo "Deploying frontend to Static Web Apps production environment..."
        echo "Frontend: ./dist"
        swa deploy ./dist --deployment-token "$SWA_TOKEN" --env production --verbose
        
        echo "✅ Frontend deployed: https://$SWA_URL"

    - name: Deploy Function App
      run: |
        RESOURCE_GROUP="rg-gitsecureops-${{ inputs.environment }}"
        FUNCTION_APP_NAME="func-gh-${{ inputs.environment }}"
        
        # Install Function App dependencies
        cd api
        if [ -f "package-lock.json" ]; then
          npm ci
        else
          npm install
        fi
        
        # Install Azure Functions Core Tools
        npm install -g azure-functions-core-tools@4 --unsafe-perm true
        
        # Deploy Function App
        echo "Deploying Function App: $FUNCTION_APP_NAME"
        func azure functionapp publish $FUNCTION_APP_NAME --javascript --build-native-deps
        
        echo "✅ Function App deployed: https://$FUNCTION_APP_NAME.azurewebsites.net"
        cd ..

    - name: Azure logout
      run: |
        az logout
      if: always()